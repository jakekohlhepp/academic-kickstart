write.csv2(unique(unmatched[flag_county==1,c("str_county")]), file="data/counties_manual.csv", row.names=FALSE, col.names=TRUE)
unmatched[STR_DETECT(str_to_upper(OAG_NM), "COUNTY OF")
]
unmatched[str_detect(str_to_upper(OAG_NM), "COUNTY OF"),]
unmatched[,str_county:=sub("(COUNTY).+$","COUNTY",org_name  )]
unmatched[,flag_county:=str_detect(org_name, "COUNTY")]
setorder(unmatched, flag_county, org_name)
write.csv2(unique(unmatched[,c("str_county")]), file="data/counties_manual.csv", row.names=FALSE, col.names=TRUE)
unmatched[,str_county:=sub("(COUNTY).+$","COUNTY",org_name  )]
unmatched[,flag_county:=str_detect(org_name, "COUNTY")]
setorder(unmatched, flag_county, org_name)
write.csv2(unique(unmatched[,c("str_county")]), file="data/counties_manual.csv", row.names=FALSE, col.names=TRUE)
install.packages('tidycensus')
library('tidycensus')
data(fips_codes)
Format
fips_codes
local$FIPS_COUNTY
fips_codes
names(fips_xwalk)<-c("NCIC_ST", "FIPS_COUNTY","str_county" )
fips_xwalk<-fips_xwalk[,c("state", "county_code", "county")]
names(fips_xwalk)<-c("NCIC_ST", "FIPS_COUNTY","str_county" )
fips_xwalk<-data.table(fips_codes)
fips_xwalk<-fips_xwalk[,c("state", "county_code", "county")]
names(fips_xwalk)<-c("NCIC_ST", "FIPS_COUNTY","str_county" )
fips_xwalk
unmatched$str_county
unmatched[,str_county:=sub("(COUNTY).+$","COUNTY",org_name  )]
unmatched$str_county
unmatched[flag_county==1,]$str_county
unmatched[,str_county:=str_trim(sub("(COUNTY).+$","COUNTY",org_name  ))]
merge(unmatched, fips_xwalk, by=c("str_county","NCIC_ST"))
unmatched$str_county
fips_xwalk
fips_xwalk[, str_county:=str_to_upper(str_county)]
merge(unmatched, fips_xwalk, by=c("str_county","NCIC_ST"))
unmatched[,FIPS_COUNTY:=NULL]
merge(unmatched, fips_xwalk, by=c("str_county","NCIC_ST"))
another_bunch<-merge(unmatched, fips_xwalk, by=c("str_county","NCIC_ST"))
local<-rbind(local, another_bunch)
local<-rbind(local, another_bunch, fill=TRUE)
local
unmatched<-merge(unmatched,fips_xwalk, by=c("str_county","NCIC_ST"),all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
nrow(unmatched)
requests<-merge(local,dag71_T,by="OAG_NCIC_CD")
requests<-merge(local,dag71_T,by="OAG_NCIC_CD", all.y=TRUE)
nrow(requests)
nrow(requests[is.na(FIPS_COUNTY)])
View(unmatched[,c("org_name")])
View(unique(unmatched[,c("org_name")]))
View(unique(fuzzymatch[,c("org_name")]))
NCIC_CD_L$NCIC_GRP_ID
table(NCIC_CD_L$NCIC_GRP_ID)
local<-NCIC_CD_L[NCIC_AGCY_TYP!="O" & NCIC_AGCY_TYP!="F", ]
local<-NCIC_CD_L[str_trim(NCIC_GRP_ID)=="",]
local<-NCIC_CD_L[NCIC_AGCY_TYP!="O" & NCIC_AGCY_TYP!="F", ]
nrow(local)
local<-NCIC_CD_L[NCIC_AGCY_TYP!="O" & NCIC_AGCY_TYP!="F", ]
local<-NCIC_CD_L[str_trim(NCIC_GRP_ID)=="",]
nrow(local)
local<-NCIC_CD_L[NCIC_AGCY_TYP!="O" & NCIC_AGCY_TYP!="F", ]
local<-local[str_trim(NCIC_GRP_ID)=="",]
nrow(local)
requests[is.na(FIPS_COUNTY), c("org_name")]
requests[is.na(FIPS_COUNTY), c("OAG_NM")]
requests[is.na(FIPS_COUNTY),.(.N)by= c("OAG_NM")]
requests[is.na(FIPS_COUNTY),.(.N),by= c("OAG_NM")]
requests[is.na(FIPS_COUNTY),.(.N),by= c("OAG_NM")]->hold
View(hold)
str_trim(sub("(COUNTY).+$","COUNTY",str_to_upper("Los Angeles County Sheriff Department")  )
)
unmatched
unmatched[str_county=="LOS ANGELES COUNTY"]
merge(NCIC_CD_L,dag71_T,by="OAG_NCIC_CD", all.y=TRUE)
NCIC_CD_L$GOV_BODY_HEAD_ID
NCIC_CD_L$RESTRICTION_ST
table(NCIC_CD_L$RESTRICTION_ST)
NCIC_CD_L$PREPARER_ID
nrow(unmatched)
library('data.table')
library('ggplot2')
library('lubridate')
library('prettyR')
library('stringr')
library('tidycensus')
memory.limit(20000)
## process raw data from CATS - only equitable sharing.
setwd('C:/Users/jakek/Google Drive/Working Documents/econ_phd/civil_asset_forfeiture/mkdata/')
asset_t<-fread('raw/foiaCATS_20200704/ASSET_T_20200704.txt')
dag71_T<-fread('raw/foiaCATS_20200704/DAG71_T.txt')
dag71_T<-dag71_T[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
NCIC_CD_L<-fread('raw/foiaCATS_20200704/NCIC_CD_L.txt')
# limit to non-federal, non-other
local<-NCIC_CD_L[NCIC_AGCY_TYP!="O" & NCIC_AGCY_TYP!="F", ]
local<-local[str_trim(NCIC_GRP_ID)=="",]
local<-local[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
colnames(local)->hold
# crosswalk of ncic codes: https://www.icpsr.umich.edu/web/NACJD/studies/35158#
load(file="raw/ICPSR_35158/DS0001/35158-0001-Data.rda")
crosswalk<-data.table(da35158.0001)
crosswalk[,OAG_NCIC_CD:=str_trim(as.character(da35158.0001$ORI9))]
crosswalk[,FIPS_COUNTY:=str_trim(as.character(da35158.0001$FIPS_COUNTY))]
crosswalk[,org_name:=str_trim(as.character(da35158.0001$NAME))]
crosswalk<-unique(crosswalk[,c("OAG_NCIC_CD", "FIPS_COUNTY","org_name")])
fuzzymatch<-crosswalk[OAG_NCIC_CD=="-1",]
# remove orgs with no ncic code
crosswalk<-crosswalk[OAG_NCIC_CD!="-1",]
stopifnot(uniqueN(crosswalk$OAG_NCIC_CD)==nrow(crosswalk))
local<-merge(crosswalk, local, by="OAG_NCIC_CD", all.y=TRUE)
unmatched<-local[is.na(FIPS_COUNTY)][, .SD, .SDcols = hold]
local<-local[!is.na(FIPS_COUNTY)]
# of unmatched, try to merge by orgname
unmatched[,org_name:=str_to_upper(OAG_NM)][,OAG_NCIC_CD:=NULL]
attach<-merge(unmatched,fuzzymatch, by="org_name")
unmatched<-merge(unmatched,fuzzymatch, by="org_name",all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
local<-rbind(local, attach)
# then try to extract county from the name itself.
unmatched[,str_county:=str_trim(sub("(COUNTY).+$","COUNTY",org_name  ))]
unmatched[,flag_county:=str_detect(org_name, "COUNTY")]
setorder(unmatched, flag_county, org_name)
#write.csv2(unique(unmatched[,c("str_county")]), file="data/counties_manual.csv", row.names=FALSE, col.names=TRUE) # manual fixes
# for now just try and match counties.
fips_xwalk<-data.table(fips_codes)
fips_xwalk<-fips_xwalk[,c("state", "county_code", "county")]
names(fips_xwalk)<-c("NCIC_ST", "FIPS_COUNTY","str_county" )
fips_xwalk[, str_county:=str_to_upper(str_county)]
unmatched[,FIPS_COUNTY:=NULL]
another_bunch<-merge(unmatched, fips_xwalk, by=c("str_county","NCIC_ST"))
local<-rbind(local, another_bunch, fill=TRUE)
unmatched<-merge(unmatched,fips_xwalk, by=c("str_county","NCIC_ST"),all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
nrow(unmatched)
requests<-merge(local,dag71_T,by="OAG_NCIC_CD", all.y=TRUE)
nrow(requests[is.na(FIPS_COUNTY)])
local[str_detect(org_name, "LOS ANGELES COUNTY")]
local<-merge(crosswalk, local, by="OAG_NCIC_CD", all.y=TRUE)
unmatched<-local[is.na(FIPS_COUNTY)][, .SD, .SDcols = hold]
local<-local[!is.na(FIPS_COUNTY)]
# of unmatched, try to merge by orgname
unmatched[,org_name:=str_to_upper(OAG_NM)][,OAG_NCIC_CD:=NULL]
attach<-merge(unmatched,fuzzymatch, by="org_name")
unmatched<-merge(unmatched,fuzzymatch, by="org_name",all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
local<-rbind(local, attach)
crosswalk<-data.table(da35158.0001)
crosswalk[,OAG_NCIC_CD:=str_trim(as.character(da35158.0001$ORI9))]
crosswalk[,FIPS_COUNTY:=str_trim(as.character(da35158.0001$FIPS_COUNTY))]
crosswalk[,org_name:=str_trim(as.character(da35158.0001$NAME))]
crosswalk<-unique(crosswalk[,c("OAG_NCIC_CD", "FIPS_COUNTY","org_name")])
fuzzymatch<-crosswalk[OAG_NCIC_CD=="-1",]
# remove orgs with no ncic code
crosswalk<-crosswalk[OAG_NCIC_CD!="-1",]
stopifnot(uniqueN(crosswalk$OAG_NCIC_CD)==nrow(crosswalk))
local<-merge(crosswalk, local, by="OAG_NCIC_CD", all.y=TRUE)
unmatched<-local[is.na(FIPS_COUNTY)][, .SD, .SDcols = hold]
local<-local[!is.na(FIPS_COUNTY)]
# of unmatched, try to merge by orgname
unmatched[,org_name:=str_to_upper(OAG_NM)][,OAG_NCIC_CD:=NULL]
attach<-merge(unmatched,fuzzymatch, by="org_name")
unmatched<-merge(unmatched,fuzzymatch, by="org_name",all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
local<-rbind(local, attach)
local<-NCIC_CD_L[NCIC_AGCY_TYP!="O" & NCIC_AGCY_TYP!="F", ]
local<-local[str_trim(NCIC_GRP_ID)=="",]
local<-local[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
colnames(local)->hold
# crosswalk of ncic codes: https://www.icpsr.umich.edu/web/NACJD/studies/35158#
load(file="raw/ICPSR_35158/DS0001/35158-0001-Data.rda")
crosswalk<-data.table(da35158.0001)
crosswalk[,OAG_NCIC_CD:=str_trim(as.character(da35158.0001$ORI9))]
crosswalk[,FIPS_COUNTY:=str_trim(as.character(da35158.0001$FIPS_COUNTY))]
crosswalk[,org_name:=str_trim(as.character(da35158.0001$NAME))]
crosswalk<-unique(crosswalk[,c("OAG_NCIC_CD", "FIPS_COUNTY","org_name")])
fuzzymatch<-crosswalk[OAG_NCIC_CD=="-1",]
# remove orgs with no ncic code
crosswalk<-crosswalk[OAG_NCIC_CD!="-1",]
stopifnot(uniqueN(crosswalk$OAG_NCIC_CD)==nrow(crosswalk))
local<-merge(crosswalk, local, by="OAG_NCIC_CD", all.y=TRUE)
unmatched<-local[is.na(FIPS_COUNTY)][, .SD, .SDcols = hold]
local<-local[!is.na(FIPS_COUNTY)]
# of unmatched, try to merge by orgname
unmatched[,org_name:=str_to_upper(OAG_NM)][,OAG_NCIC_CD:=NULL]
attach<-merge(unmatched,fuzzymatch, by="org_name")
unmatched<-merge(unmatched,fuzzymatch, by="org_name",all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
local<-rbind(local, attach)
local[is.na(OAG_NCIC_CD)]
local
NCIC_CD_L$OAG_NCIC_CD
NCIC_CD_L[OAG_NCIC_CD=="-1"]
local<-NCIC_CD_L[NCIC_AGCY_TYP!="O" & NCIC_AGCY_TYP!="F", ]
local<-local[str_trim(NCIC_GRP_ID)=="",]
local<-local[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
colnames(local)->hold
# crosswalk of ncic codes: https://www.icpsr.umich.edu/web/NACJD/studies/35158#
load(file="raw/ICPSR_35158/DS0001/35158-0001-Data.rda")
crosswalk<-data.table(da35158.0001)
crosswalk[,OAG_NCIC_CD:=str_trim(as.character(da35158.0001$ORI9))]
crosswalk[,FIPS_COUNTY:=str_trim(as.character(da35158.0001$FIPS_COUNTY))]
crosswalk[,org_name:=str_trim(as.character(da35158.0001$NAME))]
crosswalk<-unique(crosswalk[,c("OAG_NCIC_CD", "FIPS_COUNTY","org_name")])
fuzzymatch<-crosswalk[OAG_NCIC_CD=="-1",]
# remove orgs with no ncic code
crosswalk<-crosswalk[OAG_NCIC_CD!="-1",]
stopifnot(uniqueN(crosswalk$OAG_NCIC_CD)==nrow(crosswalk))
local
local<-merge(crosswalk, local, by="OAG_NCIC_CD", all.y=TRUE)
local
unmatched<-local[is.na(FIPS_COUNTY),][, .SD, .SDcols = hold]
local<-local[!is.na(FIPS_COUNTY),]
local
unmatched[,org_name:=str_to_upper(OAG_NM)][,OAG_NCIC_CD:=NULL]
attach<-merge(unmatched,fuzzymatch, by="org_name")
attach
local<-NCIC_CD_L[NCIC_AGCY_TYP!="O" & NCIC_AGCY_TYP!="F", ]
local<-local[str_trim(NCIC_GRP_ID)=="",]
local<-local[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
colnames(local)->hold
# crosswalk of ncic codes: https://www.icpsr.umich.edu/web/NACJD/studies/35158#
load(file="raw/ICPSR_35158/DS0001/35158-0001-Data.rda")
crosswalk<-data.table(da35158.0001)
crosswalk[,OAG_NCIC_CD:=str_trim(as.character(da35158.0001$ORI9))]
crosswalk[,FIPS_COUNTY:=str_trim(as.character(da35158.0001$FIPS_COUNTY))]
crosswalk[,org_name:=str_trim(as.character(da35158.0001$NAME))]
crosswalk<-unique(crosswalk[,c("OAG_NCIC_CD", "FIPS_COUNTY","org_name")])
fuzzymatch<-crosswalk[OAG_NCIC_CD=="-1",]
# remove orgs with no ncic code
crosswalk<-crosswalk[OAG_NCIC_CD!="-1",]
stopifnot(uniqueN(crosswalk$OAG_NCIC_CD)==nrow(crosswalk))
local<-merge(crosswalk, local, by="OAG_NCIC_CD", all.y=TRUE)
unmatched<-local[is.na(FIPS_COUNTY),][, .SD, .SDcols = hold]
local<-local[!is.na(FIPS_COUNTY),]
unmatched[,org_name:=str_to_upper(OAG_NM)]
attach<-merge(unmatched,fuzzymatch, by="org_name")
attach
attach[, c("org_name", "OAG_NCIC_CD.y", "OAG_NCIC_CD.x")]
unmatched<-merge(unmatched,fuzzymatch, by="org_name",all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
local<-rbind(local, attach)
local<-NCIC_CD_L[NCIC_AGCY_TYP!="O" & NCIC_AGCY_TYP!="F", ]
local<-local[str_trim(NCIC_GRP_ID)=="",]
local<-local[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
colnames(local)->hold
# crosswalk of ncic codes: https://www.icpsr.umich.edu/web/NACJD/studies/35158#
load(file="raw/ICPSR_35158/DS0001/35158-0001-Data.rda")
crosswalk<-data.table(da35158.0001)
crosswalk[,OAG_NCIC_CD:=str_trim(as.character(da35158.0001$ORI9))]
crosswalk[,FIPS_COUNTY:=str_trim(as.character(da35158.0001$FIPS_COUNTY))]
crosswalk[,org_name:=str_trim(as.character(da35158.0001$NAME))]
crosswalk<-unique(crosswalk[,c("OAG_NCIC_CD", "FIPS_COUNTY","org_name")])
fuzzymatch<-crosswalk[OAG_NCIC_CD=="-1",]
# remove orgs with no ncic code
crosswalk<-crosswalk[OAG_NCIC_CD!="-1",]
stopifnot(uniqueN(crosswalk$OAG_NCIC_CD)==nrow(crosswalk))
local<-merge(crosswalk, local, by="OAG_NCIC_CD", all.y=TRUE)
unmatched<-local[is.na(FIPS_COUNTY),][, .SD, .SDcols = hold]
local<-local[!is.na(FIPS_COUNTY),]
# of unmatched, try to merge by orgname
unmatched[,org_name:=str_to_upper(OAG_NM)]
attach<-merge(unmatched,fuzzymatch[,-c("OAG_NCIC_CD")], by="org_name")
unmatched<-merge(unmatched,fuzzymatch, by="org_name",all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
local<-rbind(local, attach)
local
unmatched[,str_county:=str_trim(sub("(COUNTY).+$","COUNTY",org_name  ))]
unmatched[,flag_county:=str_detect(org_name, "COUNTY")]
setorder(unmatched, flag_county, org_name)
#write.csv2(unique(unmatched[,c("str_county")]), file="data/counties_manual.csv", row.names=FALSE, col.names=TRUE) # manual fixes
# for now just try and match counties.
fips_xwalk<-data.table(fips_codes)
fips_xwalk<-fips_xwalk[,c("state", "county_code", "county")]
names(fips_xwalk)<-c("NCIC_ST", "FIPS_COUNTY","str_county" )
fips_xwalk[, str_county:=str_to_upper(str_county)]
unmatched[,FIPS_COUNTY:=NULL]
another_bunch<-merge(unmatched, fips_xwalk, by=c("str_county","NCIC_ST"))
local<-rbind(local, another_bunch, fill=TRUE)
unmatched<-merge(unmatched,fips_xwalk, by=c("str_county","NCIC_ST"),all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
requests<-merge(local,dag71_T,by="OAG_NCIC_CD", all.y=TRUE)
nrow(requests[is.na(FIPS_COUNTY)])
nrow(unmatched)
View(requests[is.na(FIPS_COUNTY)], .(.N), by="org_name"])
View(requests[is.na(FIPS_COUNTY), .(.N), by="org_name"])
View(requests[is.na(FIPS_COUNTY), .(.N), by="OAG_NM"])
View(merge(requests[is.na(FIPS_COUNTY), .(.N), by="OAG_NCIC_CD"], NCIC_CD_L[, c("OAG_NCIC_CD", "OAG_NM")], by="OAG_NCIC_CD")
])
View(merge(requests[is.na(FIPS_COUNTY), .(.N), by="OAG_NCIC_CD"], NCIC_CD_L[, c("OAG_NCIC_CD", "OAG_NM")], by="OAG_NCIC_CD"])
View(merge(requests[is.na(FIPS_COUNTY), .(.N), by="OAG_NCIC_CD"], NCIC_CD_L[, c("OAG_NCIC_CD", "OAG_NM"), by="OAG_NCIC_CD"])
View(merge(requests[is.na(FIPS_COUNTY), .(.N), by="OAG_NCIC_CD"], NCIC_CD_L[, c("OAG_NCIC_CD", "OAG_NM"), by="OAG_NCIC_CD"]))
View(merge(requests[is.na(FIPS_COUNTY), .(.N), by="OAG_NCIC_CD"], NCIC_CD_L[, c("OAG_NCIC_CD", "OAG_NM")], by="OAG_NCIC_CD"]))
View(merge(requests[is.na(FIPS_COUNTY), .(.N), by="OAG_NCIC_CD"], NCIC_CD_L[, c("OAG_NCIC_CD", "OAG_NM")], by="OAG_NCIC_CD"))
View(requests[is.na(FIPS_COUNTY), .(.N), by="OAG_NCIC_CD"])
NCIC_CD_L<-NCIC_CD_L[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
temp<-merge(dag71_T,NCIC_CD_L, by="OAG_NCIC_CD")
nrow(dag71_T)
nrow(temp)
NCIC_CD_L<-NCIC_CD_L[NCIC_AGCY_TYP!="O" & NCIC_AGCY_TYP!="F", ]
NCIC_CD_L<-NCIC_CD_L[str_trim(NCIC_GRP_ID)=="",]
NCIC_CD_L<-NCIC_CD_L[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
dag71_T<-merge(dag71_T,NCIC_CD_L[,c("OAG_NCIC_CD")], by="OAG_NCIC_CD")
local<-copy(NCIC_CD_L)
colnames(local)->hold
# crosswalk of ncic codes: https://www.icpsr.umich.edu/web/NACJD/studies/35158#
load(file="raw/ICPSR_35158/DS0001/35158-0001-Data.rda")
crosswalk<-data.table(da35158.0001)
crosswalk[,OAG_NCIC_CD:=str_trim(as.character(da35158.0001$ORI9))]
crosswalk[,FIPS_COUNTY:=str_trim(as.character(da35158.0001$FIPS_COUNTY))]
crosswalk[,org_name:=str_trim(as.character(da35158.0001$NAME))]
crosswalk<-unique(crosswalk[,c("OAG_NCIC_CD", "FIPS_COUNTY","org_name")])
fuzzymatch<-crosswalk[OAG_NCIC_CD=="-1",]
# remove orgs with no ncic code
crosswalk<-crosswalk[OAG_NCIC_CD!="-1",]
stopifnot(uniqueN(crosswalk$OAG_NCIC_CD)==nrow(crosswalk))
local<-merge(crosswalk, local, by="OAG_NCIC_CD", all.y=TRUE)
unmatched<-local[is.na(FIPS_COUNTY),][, .SD, .SDcols = hold]
local<-local[!is.na(FIPS_COUNTY),]
# of unmatched, try to merge by orgname
unmatched[,org_name:=str_to_upper(OAG_NM)]
attach<-merge(unmatched,fuzzymatch[,-c("OAG_NCIC_CD")], by="org_name")
unmatched<-merge(unmatched,fuzzymatch, by="org_name",all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
local<-rbind(local, attach)
View(requests[is.na(FIPS_COUNTY), .(.N), by="OAG_NM"])
dag71_T<-fread('raw/foiaCATS_20200704/DAG71_T.txt')
dag71_T<-dag71_T[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
NCIC_CD_L<-fread('raw/foiaCATS_20200704/NCIC_CD_L.txt')
NCIC_CD_L<-NCIC_CD_L[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
# limit to non-federal, non-other
temp<-merge(dag71_T,NCIC_CD_L, by="OAG_NCIC_CD")
stopifnot(nrow(dag71_T)==nrow(temp))
rm(temp)
NCIC_CD_L<-NCIC_CD_L[NCIC_AGCY_TYP!="O" & NCIC_AGCY_TYP!="F", ]
NCIC_CD_L<-NCIC_CD_L[str_trim(NCIC_GRP_ID)=="",]
NCIC_CD_L<-NCIC_CD_L[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
dag71_T<-merge(dag71_T,NCIC_CD_L[,c("OAG_NCIC_CD", "OAG_NM")], by="OAG_NCIC_CD")
local<-copy(NCIC_CD_L)
colnames(local)->hold
# crosswalk of ncic codes: https://www.icpsr.umich.edu/web/NACJD/studies/35158#
load(file="raw/ICPSR_35158/DS0001/35158-0001-Data.rda")
crosswalk<-data.table(da35158.0001)
crosswalk[,OAG_NCIC_CD:=str_trim(as.character(da35158.0001$ORI9))]
crosswalk[,FIPS_COUNTY:=str_trim(as.character(da35158.0001$FIPS_COUNTY))]
crosswalk[,org_name:=str_trim(as.character(da35158.0001$NAME))]
crosswalk<-unique(crosswalk[,c("OAG_NCIC_CD", "FIPS_COUNTY","org_name")])
fuzzymatch<-crosswalk[OAG_NCIC_CD=="-1",]
# remove orgs with no ncic code
crosswalk<-crosswalk[OAG_NCIC_CD!="-1",]
stopifnot(uniqueN(crosswalk$OAG_NCIC_CD)==nrow(crosswalk))
local<-merge(crosswalk, local, by="OAG_NCIC_CD", all.y=TRUE)
unmatched<-local[is.na(FIPS_COUNTY),][, .SD, .SDcols = hold]
local<-local[!is.na(FIPS_COUNTY),]
# of unmatched, try to merge by orgname
unmatched[,org_name:=str_to_upper(OAG_NM)]
attach<-merge(unmatched,fuzzymatch[,-c("OAG_NCIC_CD")], by="org_name")
unmatched<-merge(unmatched,fuzzymatch, by="org_name",all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
local<-rbind(local, attach)
unmatched[,str_county:=str_trim(sub("(COUNTY).+$","COUNTY",org_name  ))]
unmatched[,flag_county:=str_detect(org_name, "COUNTY")]
setorder(unmatched, flag_county, org_name)
#write.csv2(unique(unmatched[,c("str_county")]), file="data/counties_manual.csv", row.names=FALSE, col.names=TRUE) # manual fixes
# for now just try and match counties.
fips_xwalk<-data.table(fips_codes)
fips_xwalk<-fips_xwalk[,c("state", "county_code", "county")]
names(fips_xwalk)<-c("NCIC_ST", "FIPS_COUNTY","str_county" )
fips_xwalk[, str_county:=str_to_upper(str_county)]
unmatched[,FIPS_COUNTY:=NULL]
another_bunch<-merge(unmatched, fips_xwalk, by=c("str_county","NCIC_ST"))
local<-rbind(local, another_bunch, fill=TRUE)
unmatched<-merge(unmatched,fips_xwalk, by=c("str_county","NCIC_ST"),all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
local
attach
fuzzymatch
unmatched
dag71_T<-fread('raw/foiaCATS_20200704/DAG71_T.txt')
dag71_T<-dag71_T[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
NCIC_CD_L<-fread('raw/foiaCATS_20200704/NCIC_CD_L.txt')
NCIC_CD_L<-NCIC_CD_L[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
# limit to non-federal, non-other
temp<-merge(dag71_T,NCIC_CD_L, by="OAG_NCIC_CD")
stopifnot(nrow(dag71_T)==nrow(temp))
rm(temp)
NCIC_CD_L<-NCIC_CD_L[NCIC_AGCY_TYP!="O" & NCIC_AGCY_TYP!="F", ]
NCIC_CD_L<-NCIC_CD_L[str_trim(NCIC_GRP_ID)=="",]
NCIC_CD_L<-NCIC_CD_L[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
dag71_T<-merge(dag71_T,NCIC_CD_L[,c("OAG_NCIC_CD", "OAG_NM")], by="OAG_NCIC_CD")
local<-copy(NCIC_CD_L)
colnames(local)->hold
# crosswalk of ncic codes: https://www.icpsr.umich.edu/web/NACJD/studies/35158#
load(file="raw/ICPSR_35158/DS0001/35158-0001-Data.rda")
crosswalk<-data.table(da35158.0001)
crosswalk[,OAG_NCIC_CD:=str_trim(as.character(da35158.0001$ORI9))]
crosswalk[,FIPS_COUNTY:=str_trim(as.character(da35158.0001$FIPS_COUNTY))]
crosswalk[,org_name:=str_trim(as.character(da35158.0001$NAME))]
crosswalk<-unique(crosswalk[,c("OAG_NCIC_CD", "FIPS_COUNTY","org_name")])
fuzzymatch<-crosswalk[OAG_NCIC_CD=="-1",]
crosswalk<-crosswalk[OAG_NCIC_CD!="-1",]
stopifnot(uniqueN(crosswalk$OAG_NCIC_CD)==nrow(crosswalk))
local<-merge(crosswalk, local, by="OAG_NCIC_CD", all.y=TRUE)
names(local)
unmatched<-local[is.na(FIPS_COUNTY),][, .SD, .SDcols = hold]
local<-local[!is.na(FIPS_COUNTY),]
unmatched[,org_name:=str_to_upper(OAG_NM)]
names(unmatched)
attach<-merge(unmatched,fuzzymatch[,-c("OAG_NCIC_CD")], by="org_name")
names(attach)
unmatched<-merge(unmatched,fuzzymatch[,-c("OAG_NCIC_CD")], by="org_name",all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
unmatched
local<-rbind(local, attach)
names(local)
unmatched[,str_county:=str_trim(sub("(COUNTY).+$","COUNTY",org_name  ))]
unmatched[,flag_county:=str_detect(org_name, "COUNTY")]
setorder(unmatched, flag_county, org_name)
#write.csv2(unique(unmatched[,c("str_county")]), file="data/counties_manual.csv", row.names=FALSE, col.names=TRUE) # manual fixes
# for now just try and match counties.
fips_xwalk<-data.table(fips_codes)
fips_xwalk<-fips_xwalk[,c("state", "county_code", "county")]
names(fips_xwalk)<-c("NCIC_ST", "FIPS_COUNTY","str_county" )
fips_xwalk[, str_county:=str_to_upper(str_county)]
unmatched[,FIPS_COUNTY:=NULL]
another_bunch<-merge(unmatched, fips_xwalk, by=c("str_county","NCIC_ST"))
local<-rbind(local, another_bunch, fill=TRUE)
unmatched<-merge(unmatched,fips_xwalk, by=c("str_county","NCIC_ST"),all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
dag71_T$OAG_NM
requests<-merge(local[,-c("OAG_NM")],dag71_T,by="OAG_NCIC_CD", all.y=TRUE)
View(requests[is.na(FIPS_COUNTY), .(.N), by="OAG_NM"])
uniqueN(requests[is.na(FIPS_COUNTY), .(.N), by="OAG_NM"])
nrow(unmatched)
output<-requests[is.na(FIPS_COUNTY), .(count=.N), by="OAG_NM"]
setorder(output, count, OAG_NM)
write.csv2(output, file="data/counties_manual.csv", row.names=FALSE, col.names=TRUE)
requests$NCIC_ST
output<-requests[is.na(FIPS_COUNTY), .(count=.N), by=c("OAG_NM", "NCIC_ST")]
setorder(output, count, OAG_NM)
write.csv2(output, file="data/counties_manual.csv", row.names=FALSE, col.names=TRUE)
write.table(output, file="data/counties_manual.csv", row.names=FALSE, col.names=TRUE)
output
dag71_T<-fread('raw/foiaCATS_20200704/DAG71_T.txt')
dag71_T<-dag71_T[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
NCIC_CD_L<-fread('raw/foiaCATS_20200704/NCIC_CD_L.txt')
NCIC_CD_L<-NCIC_CD_L[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
# limit to non-federal, non-other
temp<-merge(dag71_T,NCIC_CD_L, by="OAG_NCIC_CD")
stopifnot(nrow(dag71_T)==nrow(temp))
rm(temp)
NCIC_CD_L<-NCIC_CD_L[NCIC_AGCY_TYP!="O" & NCIC_AGCY_TYP!="F", ]
NCIC_CD_L<-NCIC_CD_L[str_trim(NCIC_GRP_ID)=="",]
NCIC_CD_L<-NCIC_CD_L[,OAG_NCIC_CD:=str_trim(OAG_NCIC_CD)]
dag71_T<-merge(dag71_T,NCIC_CD_L[,c("OAG_NCIC_CD", "OAG_NM", "NCIC_ST")], by="OAG_NCIC_CD")
local<-copy(NCIC_CD_L)
colnames(local)->hold
# crosswalk of ncic codes: https://www.icpsr.umich.edu/web/NACJD/studies/35158#
load(file="raw/ICPSR_35158/DS0001/35158-0001-Data.rda")
crosswalk<-data.table(da35158.0001)
crosswalk[,OAG_NCIC_CD:=str_trim(as.character(da35158.0001$ORI9))]
crosswalk[,FIPS_COUNTY:=str_trim(as.character(da35158.0001$FIPS_COUNTY))]
crosswalk[,org_name:=str_trim(as.character(da35158.0001$NAME))]
crosswalk<-unique(crosswalk[,c("OAG_NCIC_CD", "FIPS_COUNTY","org_name")])
fuzzymatch<-crosswalk[OAG_NCIC_CD=="-1",]
# remove orgs with no ncic code
crosswalk<-crosswalk[OAG_NCIC_CD!="-1",]
stopifnot(uniqueN(crosswalk$OAG_NCIC_CD)==nrow(crosswalk))
local<-merge(crosswalk, local, by="OAG_NCIC_CD", all.y=TRUE)
unmatched<-local[is.na(FIPS_COUNTY),][, .SD, .SDcols = hold]
local<-local[!is.na(FIPS_COUNTY),]
# of unmatched, try to merge by orgname
unmatched[,org_name:=str_to_upper(OAG_NM)]
attach<-merge(unmatched,fuzzymatch[,-c("OAG_NCIC_CD")], by="org_name")
unmatched<-merge(unmatched,fuzzymatch[,-c("OAG_NCIC_CD")], by="org_name",all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
local<-rbind(local, attach)
# then try to extract county from the name itself.
unmatched[,str_county:=str_trim(sub("(COUNTY).+$","COUNTY",org_name  ))]
unmatched[,flag_county:=str_detect(org_name, "COUNTY")]
setorder(unmatched, flag_county, org_name)
# for now just try and match counties.
fips_xwalk<-data.table(fips_codes)
fips_xwalk<-fips_xwalk[,c("state", "county_code", "county")]
names(fips_xwalk)<-c("NCIC_ST", "FIPS_COUNTY","str_county" )
fips_xwalk[, str_county:=str_to_upper(str_county)]
unmatched[,FIPS_COUNTY:=NULL]
another_bunch<-merge(unmatched, fips_xwalk, by=c("str_county","NCIC_ST"))
local<-rbind(local, another_bunch, fill=TRUE)
unmatched<-merge(unmatched,fips_xwalk, by=c("str_county","NCIC_ST"),all.x=TRUE)
unmatched<-unmatched[is.na(FIPS_COUNTY),]
## merge to get equitable sharing requests
requests<-merge(local[,-c("OAG_NM", "NCIC_ST")],dag71_T,by="OAG_NCIC_CD", all.y=TRUE)
## pause: produce sheet of all requests without documented county. note that this is a smaller set than all orgs in unmatched. this is because unmatched includes ALL unmatched orgs, while this contains only orgs with some equitable sharing in the data.
output<-requests[is.na(FIPS_COUNTY), .(count=.N), by=c("OAG_NM", "NCIC_ST")]
setorder(output, count, OAG_NM)
write.table(output, file="data/counties_manual.csv", row.names=FALSE, col.names=TRUE)
output
write.table(output, file="data/counties_manual.csv", row.names=FALSE, col.names=TRUE, sep=",")
setorder(output, -count, OAG_NM)
write.table(output, file="data/counties_manual.csv", row.names=FALSE, col.names=TRUE, sep=",")
fips_xwalk$str_county
fips_xwalk[str_county=="VIRGINIA BEACH"]
fips_xwalk[str_county=="VIRGINIA BEACH COUNTY"]
fips_xwalk$FIPS_COUNTY
fips_xwalk$FIPS_COUNTY==810
fips_xwalk[FIPS_COUNTY==810]
NCIC_CD_L[str_detect(str_to_lower(OAG_NM), "district attorney's countywide")]
updated<-fread("data/counties_manual_withedits.csv")
updated
updated<-updated[!is.na(county) & county!="" & county!="REMOVE" & county!="SPECIAL CASE",]
updated
updated<-updated[!is.na(county) & county!="" & county!="REMOVE" & county!="SPECIAL CASE" & county!="STATE LEVEL",]
